# name: CI/CD_email-docker
# on:
#   push:
#     branches: [ "master" ]
#   pull_request:
#     branches: [ "master" ]
# jobs:
#   build_and_pub:
#     runs-on: [ubuntu-latest]
#     env:
#       LOGIN: ${{ secrets.DOCKER_LOGIN }}
#       NAME: ${{ secrets.DOCKER_NAME }}
#     steps:
#       - name: Login to docker
#         run: echo ${{ secrets.DOCKER_TOKEN }} | docker login -u ${{ secrets.DOCKER_LOGIN }} --password-stdin
#       - uses: actions/checkout@master
#       - name: Build image
#         run: docker build -t $LOGIN/$NAME:${GITHUB_REF:11} -f Dockerfile .
#       - name: Push image to docker
#         run: docker push $LOGIN/$NAME:${GITHUB_REF:11}
#   deploy:
#     environment: stage
#     runs-on: ubuntu-latest
#     needs: build_and_pub
#     steps:
#       - name: Deploy to own srv via SSH action
#         uses: appleboy/ssh-action@v0.1.3
#         with:
#           host: ${{ secrets.SSH_HOST }}
#           port: ${{ secrets.SSH_PORT }}
#           username: ${{ secrets.SSH_USER }}
#           key: ${{ secrets.SSH_PRIVATE_KEY }}
#           script: |
#             cd ${{ secrets.PROJECT_DIR }}
#             docker-compose pull ${{ secrets.DOCKER_NAME }}
#             docker-compose up -d
name: CI/CD_email-docker
on:
  push:
    branches: [ "master" ]
# on:
#   push:
#     tags:
#     - '*.*.*'
jobs:
  build_and_pub:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Set output
        id: vars
        run: echo "tag=${GITHUB_REF#refs/*/}" >> $GITHUB_OUTPUT
      - name: Check output
        env:
          RELEASE_VERSION: ${{ steps.vars.outputs.tag }}
        run: |
          echo $RELEASE_VERSION
          echo ${{ steps.vars.outputs.tag }}
      - name: Checkout
        uses: actions/checkout@v4
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_LOGIN }}
          password: ${{ secrets.DOCKER_TOKEN }}
      - name: Build and push
        uses: docker/build-push-action@v5
        with:
          context: .
          platforms: linux/amd64,linux/arm64
          push: true
          tags: ${{ secrets.DOCKER_LOGIN }}/${{ secrets.DOCKER_NAME }}:latest,${{ secrets.DOCKER_LOGIN }}/${{ secrets.DOCKER_NAME }}:${{ steps.vars.outputs.tag }}
